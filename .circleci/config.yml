version: 2.1
executors:
  net-executor6:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk

  net-executor3:
    docker:
      - image : mcr.microsoft.com/dotnet/sdk
    working_directory: /projects/Scheduling

jobs:
  tests:

    executor: net-executor6
    steps:
      - checkout
      - run: |
          dotnet test --logger 'trx;LogFileName=TestResults.trx'
      - store_test_results:
          path: GeneticAlgorithm_Tests/TestResults/TestResults.trx

  build-mac:

    executor: net-executor6
    working_directory: /projects/Scheduling
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: |
          dotnet publish --framework net6.0 --runtime osx-x64 --self-contained -c Release -o workspace/mac-output ConsoleRunner/ConsoleRunner.csproj
      - persist_to_workspace:
          root: workspace
          paths:
            - mac-output


  build-win:

    executor: net-executor6
    working_directory: /projects/Scheduling
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: |
          dotnet publish --framework net6.0 --runtime win-x64 --self-contained -c Release -o workspace/win-output ConsoleRunner/ConsoleRunner.csproj
      - persist_to_workspace:
          root: workspace
          paths:
            - win-output

  build-linux:

    executor: net-executor6
    working_directory: /projects/Scheduling
    steps:
      - checkout
      - run: mkdir -p workspace
      - run: |
          dotnet publish --framework net6.0 --runtime linux-x64 --self-contained -c Release -o workspace/linux-output ConsoleRunner/ConsoleRunner.csproj
      - persist_to_workspace:
          root: workspace
          paths:
            - linux-output

  zip-publish:
    executor: net-executor3
    steps:
      - attach_workspace:
          at: /projects/Scheduling
      - run: |
          apt-get update; \
          apt-get install -y zip
      - run: |
          zip -r linux.zip linux-output
      - run: |
          zip -r mac.zip mac-output
      - run: |
          zip -r win.zip win-output
      - run: |
          rm -r linux-output
      - run: |
          rm -r mac-output
      - run: |
          rm -r win-output
      - persist_to_workspace:
          root: /projects/rpg-v2
          paths:
            - win.zip
            - mac.zip
            - linux.zip

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    working_directory: /projects
    steps:
      - attach_workspace:
          at: ~/projects/Scheduling
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION="$(date +"%Y.%m.%d").${CIRCLE_BUILD_NUM}"
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 -delete $VERSION ./rpg-v2/

  analyse-code:
    executor: net-executor6
    steps:
      - checkout
      - run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/root/.dotnet/tools"
          apt update -y
          apt install openjdk-17-jdk -y
          dotnet sonarscanner begin /k:"TomaszSteblik_job-scheduling-ga" /o:"tomaszsteblik" /d:sonar.login="$SONAR_TOKEN" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ~/project/Scheduling.sln
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
      
workflows:
  commit:
    jobs:
      - tests
      - analyse-code:
          context: SonarCloud
      - build-mac:
          requires:
            - tests
      - build-linux:
          requires:
            - tests
      - build-win:
          requires:
            - tests
      - zip-publish:
          requires:
            - build-mac
            - build-win
            - build-linux
      - publish-github-release:
          context: GITHUB_CREDS
          requires:
              - zip-publish

      
